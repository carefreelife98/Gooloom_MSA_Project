apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: cloudwave-project-with-eksctl
  region: ap-northeast-2 # 원하는 리전을 입력합니다.
vpc:
  id: vpc-04a25dc65a16e7ef9 # VPC ID를 붙여넣습니다.
  cidr: 10.0.0.0/16
  securityGroup: sg-0c727b644da49389a # EC2 보안그룹에서 Control Plane Security Group의 ID를 붙여넣습니다.
  subnets:
    private:
      ap-northeast-2a:
        id: subnet-0d7754996698a58f7 # Subnet의 cidr를 잘 확인하고 ID를 붙여넣습니다.
        cidr: 10.0.128.0/20
      ap-northeast-2b:
        id: subnet-0628ecb1764f4fd28 # Subnet의 cidr를 잘 확인하고 ID를 붙여넣습니다.
        cidr: 10.0.144.0/20
      ap-northeast-2c:
        id: subnet-055fa79e7f4ed3b01 # Subnet의 cidr를 잘 확인하고 ID를 붙여넣습니다.
        cidr: 10.0.160.0/20
  clusterEndpoints:
    publicAccess: false # Cluster에 대한 외부 접속을 차단합니다.
    privateAccess: true # VPC 내부 접속을 허용합니다.
managedNodeGroups:
  - name: eks-nodegroup
    instanceType: t2.micro
    availabilityZones:
      - ap-northeast-2a
      - ap-northeast-2b
      - ap-northeast-2c
    privateNetworking: true # privateAccess: true 인 경우 true로 설정해야 합니다.
    desiredCapacity: 3 # 초기에 생성하는 노드 갯수
    minSize: 3 # 최소 노드 갯수
    maxSize: 9 # 오토스케일링 시 늘어날 수 있는 최대 노드 갯수
    ssh: # use existing EC2 key
      allow: false # false 시 노드에 대한 ssh 접속 차단
    iam:
      withAddonPolicies:
        imageBuilder: true # AWS ECR에 대한 권한 추가
        albIngress: true  # albIngress에 대한 권한 추가
        cloudWatch: true # cloudWatch에 대한 권한 추가
        autoScaler: true # auto scaling에 대한 권한 추가
    instanceName: csm-WORKER
    volumeSize: 50 # 노드의 볼륨 사이즈